{"by":"pg","id":21232605,"kids":[21236724,21235692,21243170,21241345],"parent":21232459,"text":"It&#x27;s so broadly the goal of the language that many things do, often in small ways. For example, it turns out to be really convenient that strings are simply lists of characters. It means all the list manipulation functions just work on them. And the where special form and zap macro make it much easier to define operators that modify things. The advantage of Bel is a lot of small things like that rather than a single killer feature.<p>Making bel.bel shorter was one of my main goals during this project. It has a double benefit. Since the Bel source is a Bel program, the shorter I can make it, the more powerful Bel must be. Plus a shorter source is (pathological coding tricks excepted) easier to understand, which means Bel is better in that way too. There were many days when I&#x27;d make bel.bel 5 lines shorter and consider it a successful day&#x27;s work.<p>One of the things I found helped most in making programs shorter was higher order functions. These let you get rid of variables, which are a particularly good thing to eliminate from code when you can. I found that higher order functions combined with intrasymbol syntax could often collapse something that had been a 4 line def into a 1 line set.","time":1570884347,"type":"comment","createdOn":"2021-12-13T23:45:48.648","ttl":600}